#!/usr/bin/env ruby
$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'rbfSom'


phoneme_path = 'phoneme.csv'
clouds_path = 'clouds.csv'
csv_phoneme = RbfSom::Csv.new(phoneme_path)
csv_clouds = RbfSom::Csv.new(clouds_path)

matrix1=csv_clouds.matrix
matrix1.shuffle!
matrix2=csv_phoneme.matrix
matrix2.shuffle!

#creacion de XOR
desviacion = 0.10
cantidad=50
matrixPrueba1 = RbfSom::RandomCustomize.new(desviacion, cantidad, 1.0, 1.0,nil, 0)
matrixPrueba2 = RbfSom::RandomCustomize.new(desviacion, cantidad, -1.0, 1.0,nil,  1)
matrixPrueba3 = RbfSom::RandomCustomize.new(desviacion, cantidad,  1.0,-1.0,nil,  1)
matrixPrueba4 = RbfSom::RandomCustomize.new(desviacion, cantidad,  -1.0,-1.0,nil,  0)
patrones= matrixPrueba1.matrix + matrixPrueba2.matrix + matrixPrueba3.matrix + matrixPrueba4.matrix 
patrones.shuffle!
matrixEntrenamiento1 = Array.new
matrixEntrenamiento2 = Array.new
matrixEntrenamiento3 = Array.new
matrixTest1 = Array.new
matrixTest2 = Array.new
matrixTest3 = Array.new

#cant XOR 200
for i in 0..159
  matrixEntrenamiento3 << patrones[i]
end
for i in 160..199
  matrixTest3 << patrones[i]
end
for i in 0..3999
  matrixEntrenamiento1 << matrix1[i]
  matrixEntrenamiento2 << matrix2[i]
end
for i in 4000..4999
  matrixTest1 << matrix1[i]
  matrixTest2 << matrix2[i]
end


#crear SOM y dps etiquetarlo...

som1 = RbfSom::Som.new(matrixEntrenamiento3,2,2,0.5,100)
som2 = RbfSom::Som.new(matrixEntrenamiento1[0...500],4,4,0.5,100)
som3 = RbfSom::SomP.new(matrixEntrenamiento2,4,4,0.5,100)

#Entrenamiento
som1.entrenamiento
som2.entrenamiento
#som3.entrenamiento
#Etiquetado de neuronas

som1.etiquetarNeuronas(2)
som2.etiquetarNeuronas(2)
#som3.etiquetarNeuronas(2)

#Prueba
som1.test(matrixTest3)
som2.test(matrixTest1)
#som3.test(matrixTest2)

#Calculo del error y resultados finales

err1=0
for i in 0...(som2.errores.count)
  if(som2.errores[i]==0)
      err1+=1
    end
end

err2=0
for i in 0...(som3.errores.count)
  if(som3.errores[i]==0)
    err2+=1
  end
end

err3=0
for i in 0...(som1.errores.count)
  if(som1.errores[i]==0)
    err3+=1
  end
end

p "*************** Prueba con XOR ****************"
p "cantidad"
p som1.errores.count 
p "aciertos"
p err3
p "***********************************************"
p "*************** Prueba con Clouds *************"
p "cantidad"
p som2.errores.count 
p "aciertos"
p err1
p "***********************************************"
p "*************** Prueba con Phoneme ************"
p "cantidad"
p som3.errores.count 
p "aciertos"
p err2
p "***********************************************"

#lvq1.graficarPuntos
#lvq2.graficarPuntos
